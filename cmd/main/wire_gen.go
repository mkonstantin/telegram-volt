// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"go.uber.org/zap"
	"telegram-api/internal/app/form"
	"telegram-api/internal/app/handler"
	"telegram-api/internal/app/menu"
	"telegram-api/internal/app/usecase"
	"telegram-api/internal/infrastructure/middleware"
	"telegram-api/internal/infrastructure/repo"
	"telegram-api/internal/infrastructure/router"
	"telegram-api/internal/infrastructure/scheduler"
	handler2 "telegram-api/internal/infrastructure/scheduler/handler"
	"telegram-api/internal/infrastructure/telegram"
)

// Injectors from wire.go:

func InitializeApplication(secret string, logger *zap.Logger) (telegram.TelegramBot, func(), error) {
	contextContext := context.Background()
	connection, cleanup := provideDBConnection(contextContext, logger)
	userRepository := repo.NewUserRepository(connection)
	officeRepository := repo.NewOfficeRepository(connection)
	officeMenuForm := form.NewOfficeMenuForm(logger)
	officeMenu := menu.NewOfficeMenu(officeRepository, officeMenuForm, logger)
	officeListForm := form.NewOfficeListForm(logger)
	officeListMenu := menu.NewOfficeListMenu(officeRepository, officeListForm, logger)
	start := handler.NewStartHandle(officeMenu, officeListMenu, logger)
	bookSeatRepository := repo.NewBookSeatRepository(connection)
	userService := usecase.NewUserService(userRepository, officeRepository, bookSeatRepository, logger)
	officeList := handler.NewOfficeListHandle(userService, officeMenu, logger)
	seatListForm := form.NewSeatListForm(logger)
	seatListMenu := menu.NewSeatListMenu(bookSeatRepository, seatListForm, logger)
	handlerOfficeMenu := handler.NewOfficeMenuHandle(userService, seatListMenu, officeListMenu, logger)
	ownSeatForm := form.NewOwnSeatForm(logger)
	ownSeatMenu := menu.NewOwnSeatMenu(ownSeatForm, logger)
	freeSeatForm := form.NewFreeSeatForm(logger)
	freeSeatMenu := menu.NewFreeSeatMenu(bookSeatRepository, freeSeatForm, logger)
	seatList := handler.NewSeatListHandle(bookSeatRepository, ownSeatMenu, freeSeatMenu, logger)
	handlerOwnSeatMenu := handler.NewOwnSeatMenuHandle(userService, seatListMenu, logger)
	handlerFreeSeatMenu := handler.NewFreeSeatMenuHandle(userService, seatListMenu, logger)
	routerRouter := router.NewRouter(start, officeList, handlerOfficeMenu, seatList, handlerOwnSeatMenu, handlerFreeSeatMenu, logger)
	userMW := middleware.NewUserMW(userRepository, routerRouter, logger)
	seatRepository := repo.NewSeatRepository(connection)
	officeJob := handler2.NewOfficeJob(bookSeatRepository, seatRepository, logger)
	jobsScheduler := scheduler.NewJobsScheduler(officeRepository, officeJob, logger)
	telegramBot := telegram.NewTelegramBot(secret, userMW, jobsScheduler, logger)
	return telegramBot, func() {
		cleanup()
	}, nil
}
